
package org.apache.juddi.v3_service;

import java.rmi.RemoteException;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import org.apache.juddi.api_v3.ClerkDetail;
import org.apache.juddi.api_v3.ClientSubscriptionInfoDetail;
import org.apache.juddi.api_v3.DeleteClientSubscriptionInfo;
import org.apache.juddi.api_v3.DeletePublisher;
import org.apache.juddi.api_v3.GetAllPublisherDetail;
import org.apache.juddi.api_v3.GetPublisherDetail;
import org.apache.juddi.api_v3.NodeDetail;
import org.apache.juddi.api_v3.PublisherDetail;
import org.apache.juddi.api_v3.SaveClerk;
import org.apache.juddi.api_v3.SaveClientSubscriptionInfo;
import org.apache.juddi.api_v3.SaveNode;
import org.apache.juddi.api_v3.SavePublisher;
import org.apache.juddi.api_v3.SyncSubscription;
import org.apache.juddi.api_v3.SyncSubscriptionDetail;
import org.uddi.api_v3.DeleteTModel;
import org.uddi.v3_service.DispositionReportFaultMessage;


/**
 *  This portType defines all of the jUDDI publisher operations. This is above and beyond the original UDDI v3 specification and is NOT part of the standard. Method behavior within this class may change from version to version. These methods are primarily meant for administrative functions.
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "JUDDI_Api_PortType", targetNamespace = "urn:juddi-apache-org:v3_service")
@XmlSeeAlso({
    org.uddi.repl_v3.ObjectFactory.class,
    org.apache.juddi.api_v3.ObjectFactory.class,
    org.uddi.api_v3.ObjectFactory.class,
    org.uddi.custody_v3.ObjectFactory.class,
    org.uddi.policy_v3.ObjectFactory.class,
    org.uddi.policy_v3_instanceparms.ObjectFactory.class,
    org.uddi.sub_v3.ObjectFactory.class,
    org.w3._2000._09.xmldsig_.ObjectFactory.class
})
public interface JUDDIApiPortType {


    /**
     *  Returns a specific publisher 
     * 
     * @param parameters
     * @return
     *     returns org.apache.juddi.api_v3.PublisherDetail
     * @throws DispositionReportFaultMessage
     */
    @WebMethod(operationName = "get_publisherDetail", action = "get_publisherDetail")
    @WebResult(name = "publisherDetail", targetNamespace = "urn:juddi-apache-org:api_v3", partName = "parameters")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public PublisherDetail getPublisherDetail(
        @WebParam(name = "get_publisherDetail", targetNamespace = "urn:juddi-apache-org:api_v3", partName = "parameters")
        GetPublisherDetail parameters)
        throws DispositionReportFaultMessage, RemoteException
    ;

    /**
     *  deletes records created from calling save_ClientSubscriptionInfo 
     * 
     * @param body
     * @throws DispositionReportFaultMessage
     */
    @WebMethod(operationName = "delete_ClientSubscriptionInfo", action = "delete_ClientSubscriptionInfo")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void deleteClientSubscriptionInfo(
        @WebParam(name = "delete_ClientSubscriptionInfo", targetNamespace = "urn:juddi-apache-org:api_v3", partName = "body")
        DeleteClientSubscriptionInfo body)
        throws DispositionReportFaultMessage, RemoteException
    ;

    /**
     *  Returns all publishers that are defined. This method does not support paging, so use with caution 
     * 
     * @param body
     * @return
     *     returns org.apache.juddi.api_v3.PublisherDetail
     * @throws DispositionReportFaultMessage
     */
    @WebMethod(operationName = "get_allPublisherDetail", action = "get_allPublisherDetail")
    @WebResult(name = "publisherDetail", targetNamespace = "urn:juddi-apache-org:api_v3", partName = "body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public PublisherDetail getAllPublisherDetail(
        @WebParam(name = "get_allPublisherDetail", targetNamespace = "urn:juddi-apache-org:api_v3", partName = "body")
        GetAllPublisherDetail body)
        throws DispositionReportFaultMessage, RemoteException
    ;

    /**
     *  Saves a clerk (associate credentials with a stored node) 
     * 
     * @param body
     * @return
     *     returns org.apache.juddi.api_v3.ClerkDetail
     * @throws DispositionReportFaultMessage
     */
    @WebMethod(operationName = "save_Clerk", action = "save_Clerk")
    @WebResult(name = "save_ClerkResponse", targetNamespace = "urn:juddi-apache-org:api_v3", partName = "save_ClerkResponse")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public ClerkDetail saveClerk(
        @WebParam(name = "save_ClerkRequest", targetNamespace = "urn:juddi-apache-org:api_v3", partName = "body")
        SaveClerk body)
        throws DispositionReportFaultMessage, RemoteException
    ;

    /**
     *  Deletes a publisher. Data owned by the publisher remains. 
     * 
     * @param body
     * @throws DispositionReportFaultMessage
     */
    @WebMethod(operationName = "delete_publisher", action = "delete_publisher")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void deletePublisher(
        @WebParam(name = "delete_publisher", targetNamespace = "urn:juddi-apache-org:api_v3", partName = "body")
        DeletePublisher body)
        throws DispositionReportFaultMessage, RemoteException
    ;

    /**
     *  Saves a UDDI Node to the database. These nodes can then be referenced for things like server to server subscriptions, replication and custody transfer functions 
     * 
     * @param body
     * @return
     *     returns org.apache.juddi.api_v3.NodeDetail
     * @throws DispositionReportFaultMessage
     */
    @WebMethod(operationName = "save_Node", action = "save_Node")
    @WebResult(name = "save_NodeResponse", targetNamespace = "urn:juddi-apache-org:api_v3", partName = "save_NodeResponse")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public NodeDetail saveNode(
        @WebParam(name = "save_NodeRequest", targetNamespace = "urn:juddi-apache-org:api_v3", partName = "body")
        SaveNode body)
        throws DispositionReportFaultMessage, RemoteException
    ;

    /**
     *  Saves a publisher to the database. Note: this does not create a user account, however it does authorize that user account to make alterations to data. 
     * 
     * @param body
     * @return
     *     returns org.apache.juddi.api_v3.PublisherDetail
     * @throws DispositionReportFaultMessage
     */
    @WebMethod(operationName = "save_publisher", action = "save_publisher")
    @WebResult(name = "save_publisherResponse", targetNamespace = "urn:juddi-apache-org:api_v3", partName = "save_publisherResponse")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public PublisherDetail savePublisher(
        @WebParam(name = "save_publisher", targetNamespace = "urn:juddi-apache-org:api_v3", partName = "body")
        SavePublisher body)
        throws DispositionReportFaultMessage, RemoteException
    ;

    /**
     *  Removes a tModel from the database. References to the tModel are not affected. getTmodelDetails will no longer return these items. 
     * 
     * @param body
     * @throws DispositionReportFaultMessage
     */
    @WebMethod(operationName = "adminDelete_tModel", action = "adminDelete_tmodel")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void adminDeleteTModel(
        @WebParam(name = "adminDelete_tmodel", targetNamespace = "urn:juddi-apache-org:api_v3", partName = "body")
        DeleteTModel body)
        throws DispositionReportFaultMessage, RemoteException
    ;

    /**
     *  Associates a subscription with a clerk 
     * 
     * @param body
     * @return
     *     returns org.apache.juddi.api_v3.ClientSubscriptionInfoDetail
     * @throws DispositionReportFaultMessage
     */
    @WebMethod(operationName = "save_ClientSubscriptionInfo", action = "save_ClientSubscriptionInfo")
    @WebResult(name = "save_ClientSubscriptionInfoResponse", targetNamespace = "urn:juddi-apache-org:api_v3", partName = "save_ClientSubscriptionInfoResponse")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public ClientSubscriptionInfoDetail saveClientSubscriptionInfo(
        @WebParam(name = "save_ClientSubscriptionInfoRequest", targetNamespace = "urn:juddi-apache-org:api_v3", partName = "body")
        SaveClientSubscriptionInfo body)
        throws DispositionReportFaultMessage, RemoteException
    ;

    /**
     *  Instructs the registry to perform a synchronous subscription response. 
     * 
     * @param syncSubscription
     * @return
     *     returns org.apache.juddi.api_v3.SyncSubscriptionDetail
     * @throws DispositionReportFaultMessage
     */
    @WebMethod(operationName = "invoke_SyncSubscription", action = "invoke_SyncSubscription")
    @WebResult(name = "syncSubscriptionDetail", targetNamespace = "urn:juddi-apache-org:api_v3")
    @RequestWrapper(localName = "invoke_SyncSubscription", targetNamespace = "urn:juddi-apache-org:api_v3", className = "org.apache.juddi.api_v3.SyncSubscriptionRequest")
    @ResponseWrapper(localName = "invoke_SyncSubscriptionResponse", targetNamespace = "urn:juddi-apache-org:api_v3", className = "org.apache.juddi.api_v3.SyncSubscriptionDetailResponse")
    public SyncSubscriptionDetail invokeSyncSubscription(
        @WebParam(name = "syncSubscription", targetNamespace = "urn:juddi-apache-org:api_v3")
        SyncSubscription syncSubscription)
        throws DispositionReportFaultMessage, RemoteException
    ;

}
